{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\reactProje\\\\react\\\\my-movies\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from \"./AddMovie\";\nimport axios from \"axios\";\nimport * as ReactDOM from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\n//class base component filmlerin sayısı değişken olacagı ıcın bılgıler state ıcıne gomulur bu yuzden class base kullanıyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      searchQuery: \"\"\n    };\n    //app.js parent comp.dan movielist child comp.a propslarla delete işlemi tasınır\n    //film silme işlemi için fonksiyon stateteki listeyi al yine ama silinenin id siyle aynı olmayanları\n    //anlamına geliyor\n    /*deleteMovie = (movie)=>{\r\n        const newMovieList=this.state.movies.filter(\r\n            m => m.id !== movie.id\r\n        );\r\n          //elimizde ilk durumda film bilgisi olmasaydı bu şablon kullanılırdı \r\n        //this.setState({\r\n        //    movies : newMovieList\r\n        //})\r\n          //elimizde film bilgisi oldugu ıcın bu sekılde yazıyoruz\r\n        this.setState(state =>({\r\n            movies: newMovieList\r\n        }))\r\n    }*/\n    //fetch api kullanarak\n    /*deleteMovie = async(movie)=>{\r\n       const baseURL=`http://localhost:3002/movies/${movie.id}`\r\n       await fetch(baseURL,{\r\n            method: \"DELETE\"\r\n       })\r\n       const newMovieList=this.state.movies.filter(\r\n            m=> m.id !== movie.id\r\n       );\r\n       this.setState(state=>({\r\n            movies: newMovieList\r\n       }))\r\n      }*/\n    //axios kullanarak \n    //` işaretini altgr+virgül ile iki kere basarak yap\n    this.deleteMovie = async movie => {\n      axios.delete(`http://localhost:3002/movies/${movie.id}`);\n      const newMovieList = this.state.movies.filter(m => m.id !== movie.id);\n      this.setState(state => ({\n        movies: newMovieList\n      }));\n    };\n    //arama input una her yazı yazıldıgında searchQuery i o yazılanla update ediyoruz\n    this.searchMovie = event => {\n      //console.log(event.target.value)\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n  }\n  //fetch api kullanarak\n  //async componentDidMount(){\n  //    const baseURL=\"http://localhost:3002/movies\";\n  //    const response= await fetch(baseURL); //async fonk.promise döner\n  //    const data = await response.json();\n  //    this.setState({movies:data})  \n  //}\n\n  //axios kullanarak\n  async componentDidMount() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n    console.log(response);\n    this.setState({\n      movies: response.data\n    });\n  }\n  render() {\n    //indexof ile yazılan kelimeyi filmlerin name kısmı ıcınde arıyor bulamazsa indexof -1 döner o yuzden\n    //-1 dönmediklerini yanı bulduklarını döndür diyoruz\n    //hepsini küçük harf olarak algılayıp kıyaslaması ıcın toLowerCase kullandık\n    let filteredMovies = this.state.movies.filter(movie => {\n      return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                  searchMovieProp: this.searchMovie\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n              movies: filteredMovies,\n              deleteMovieProp: this.deleteMovie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          path: \"/add\",\n          component: AddMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n//functional component\n//const App=()=>{\n//    return (\n//        <h1>My Movies</h1>\n//    )\n//}\nexport default App;","map":{"version":3,"names":["React","SearchBar","MovieList","AddMovie","axios","ReactDOM","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","App","Component","constructor","args","state","movies","searchQuery","deleteMovie","movie","delete","id","newMovieList","filter","m","setState","searchMovie","event","target","value","componentDidMount","response","get","console","log","data","render","filteredMovies","name","toLowerCase","indexOf","Router","children","className","Routes","path","exact","Fragment","searchMovieProp","fileName","_jsxFileName","lineNumber","columnNumber","deleteMovieProp","component"],"sources":["C:/Users/pc/Desktop/reactProje/react/my-movies/src/components/App.js"],"sourcesContent":["import React from \"react\";\r\nimport SearchBar from './SearchBar';\r\nimport MovieList from './MovieList';\r\nimport AddMovie from \"./AddMovie\";\r\nimport axios from \"axios\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\n//class base component filmlerin sayısı değişken olacagı ıcın bılgıler state ıcıne gomulur bu yuzden class base kullanıyoruz\r\nclass App extends React.Component{\r\n\r\n    state={\r\n            movies : [\r\n                \r\n            ],\r\n\r\n            searchQuery: \"\"\r\n    }\r\n\r\n    //fetch api kullanarak\r\n    //async componentDidMount(){\r\n    //    const baseURL=\"http://localhost:3002/movies\";\r\n    //    const response= await fetch(baseURL); //async fonk.promise döner\r\n    //    const data = await response.json();\r\n    //    this.setState({movies:data})  \r\n    //}\r\n\r\n    //axios kullanarak\r\n    async componentDidMount(){\r\n        const response=await axios.get(\"http://localhost:3002/movies\");\r\n        console.log(response);\r\n        this.setState({movies: response.data});\r\n    }\r\n\r\n    //app.js parent comp.dan movielist child comp.a propslarla delete işlemi tasınır\r\n    //film silme işlemi için fonksiyon stateteki listeyi al yine ama silinenin id siyle aynı olmayanları\r\n    //anlamına geliyor\r\n    /*deleteMovie = (movie)=>{\r\n        const newMovieList=this.state.movies.filter(\r\n            m => m.id !== movie.id\r\n        );\r\n\r\n        //elimizde ilk durumda film bilgisi olmasaydı bu şablon kullanılırdı \r\n        //this.setState({\r\n        //    movies : newMovieList\r\n        //})\r\n\r\n        //elimizde film bilgisi oldugu ıcın bu sekılde yazıyoruz\r\n        this.setState(state =>({\r\n            movies: newMovieList\r\n        }))\r\n    }*/\r\n\r\n    //fetch api kullanarak\r\n    /*deleteMovie = async(movie)=>{\r\n       const baseURL=`http://localhost:3002/movies/${movie.id}`\r\n       await fetch(baseURL,{\r\n            method: \"DELETE\"\r\n       })\r\n       const newMovieList=this.state.movies.filter(\r\n            m=> m.id !== movie.id\r\n       );\r\n       this.setState(state=>({\r\n            movies: newMovieList\r\n       }))\r\n\r\n    }*/\r\n\r\n    //axios kullanarak \r\n    //` işaretini altgr+virgül ile iki kere basarak yap\r\n    deleteMovie = async(movie)=>{\r\n        axios.delete(`http://localhost:3002/movies/${movie.id}`)\r\n        const newMovieList=this.state.movies.filter(\r\n             m=> m.id !== movie.id\r\n        );\r\n        this.setState(state=>({\r\n             movies: newMovieList\r\n        }))\r\n     }\r\n    \r\n    //arama input una her yazı yazıldıgında searchQuery i o yazılanla update ediyoruz\r\n    searchMovie=(event)=>{\r\n        //console.log(event.target.value)\r\n        this.setState({searchQuery: event.target.value})\r\n    }\r\n\r\n    render(){\r\n\r\n        //indexof ile yazılan kelimeyi filmlerin name kısmı ıcınde arıyor bulamazsa indexof -1 döner o yuzden\r\n        //-1 dönmediklerini yanı bulduklarını döndür diyoruz\r\n        //hepsini küçük harf olarak algılayıp kıyaslaması ıcın toLowerCase kullandık\r\n        let filteredMovies = this.state.movies.filter(\r\n            (movie)=>{\r\n                return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\r\n            }\r\n        )\r\n\r\n        return (\r\n            <Router>\r\n\r\n                <div className=\"container\">\r\n\r\n                    \r\n\r\n                        \r\n\r\n                        <Routes path=\"/\" exact render={() => (\r\n                            <React.Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <SearchBar searchMovieProp={this.searchMovie} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            \r\n                                <MovieList\r\n                                    movies={filteredMovies}\r\n                                    deleteMovieProp={this.deleteMovie} \r\n                                \r\n                                />\r\n                            </React.Fragment>\r\n                        )}>\r\n\r\n                        </Routes>\r\n\r\n                        <Routes path=\"/add\" component={AddMovie} />\r\n\r\n                        \r\n                   \r\n                </div>\r\n\r\n            </Router>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//functional component\r\n//const App=()=>{\r\n//    return (\r\n//        <h1>My Movies</h1>\r\n//    )\r\n//}\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}